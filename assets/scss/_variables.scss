// resposive

$breakPoint-sp: 767px;
$breakPoint-pc: 1028px;

@mixin res($mode: '', $a: 0, $b: 0) {
    @if $mode== 'sp' {
      // @media screen and (max-width: $breakPoint-pc) 
      @media screen and (orientation: portrait) {
        @content;
      }
    }
  
    @if $mode== 'sp-tb' {
      @media screen and (max-width: $breakPoint-pc) {
        @content;
      }
    }
  
    @if $mode== 'tb' {
      @media screen and (min-width: $breakPoint-sp + 1px) and (max-width: $breakPoint-pc) {
        @content;
      }
    }
  
    @if $mode== 'tb-pc' {
      @media screen and (min-width: $breakPoint-sp + 1px) {
        @content;
      }
    }
  
    @if $mode== 'pc' {
      @media screen and (min-width: $breakPoint-pc + 1px) {
        @content;
      }
    }
  }

// @mixin res($mode: "", $a: 0, $b: 0) {
//   @if $mode== "sp" {
//     @media screen and (max-width: $breakPoint-sp) {
//       @content;
//     }
//   }

//   @if $mode== "sp-tb" {
//     @media screen and (max-width: $breakPoint-pc) {
//       @content;
//     }
//   }

//   @if $mode== "tb" {
//     @media screen and (min-width: $breakPoint-sp + 1px) and (max-width: $breakPoint-pc) {
//       @content;
//     }
//   }

//   @if $mode== "tb-pc" {
//     @media screen and (min-width: $breakPoint-sp + 1px) {
//       @content;
//     }
//   }

//   @if $mode== "pc" {
//     @media screen and (min-width: $breakPoint-pc + 1px) {
//       @content;
//     }
//   }
// }

// colors

$black: #000000;
$white: #ffffff;
$green: #00ff7e;
$blue: #20108f;
$green: #108786;
$blue: #1955a6;
$navy: #374466;

.blue_bg {
  background-color: $blue;
}
.navy_bg {
  background-color: $navy;
}
.green_bg {
  background-color: $green;
}
.white_bg {
  background-color: $white;
}
.blue {
  color: $blue;
}
.green {
  color: $green;
}
.navy {
  color: $navy;
}
.white {
  color: $white;
}

// fonts & texts

@mixin gothic() {
  font-family: "hiragino-kaku-gothic-pron", sans-serif;
  font-weight: 600;
  font-style: normal;
}

@mixin eng() {
  font-family: "itc-avant-garde-gothic-pro", sans-serif;
  font-weight: 500;
  font-style: normal;
}

@mixin mincho() {
  font-family: dnp-shuei-ymincho-std, sans-serif;
  font-weight: 500;
  font-style: normal;
  letter-spacing: 0.1em;
}

body {
  font-family: "itc-avant-garde-gothic-pro", "hiragino-kaku-gothic-pron", "Noto Sans JP", sans-serif;
  font-weight: 300;
  font-style: normal;
  font-display: swap;
  color: $black;
  background-color: $white;
  background-repeat: repeat;
  mix-blend-mode: multiply;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  word-break: auto-phrase;
}

pre {
  white-space: pre-wrap;
}

a {
  text-decoration: none;
}

p {
  line-height: 1.5em;
  padding-bottom: 30px;
  @include res("sp") {
    padding-bottom: 8px;
  }
}

span {
  display: inline-block;
}

// base

html {
  touch-action: manipulation;
  overscroll-behavior-x: none;
  overscroll-behavior-y: none;
  height: 100dvh;
  width: 100vw;
  scrollbar-width: none;
  -ms-overflow-style: none;
  @include res("sp") {
    height: 100dvh;
  }
}

html::-webkit-scrollbar {
  display: none;
}

body {
  overscroll-behavior-x: none;
  overscroll-behavior-y: none;
  scrollbar-width: none;
  height: 100dvh;
  width: 100vw;
  margin: 0;
  // scrollbar-width: none;
  // -ms-overflow-style: none;
  @include res("sp") {
    height: 100dvh;
  }
}
// body::-webkit-scrollbar {
//   display: none;
// }

img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

img,
svg {
  /* PCの右クリック禁止 */
  pointer-events: none;

  /* SPの長押し禁止 */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-touch-callout: none;
  -moz-user-select: none;
  user-select: none;
}

@media print {
  body {
    display: none;
  }
}

// effects

.blur {
  filter: blur(10px);
  animation: blur-animation 1s ease forwards;
}

.blur-fast {
  filter: blur(10px);
  animation: blur-animation 0.5s ease forwards;
}

@keyframes blur-animation {
  100% {
    filter: blur(0);
  }
}

// margin & padding

// @mixin margin-A {
//   margin-left: auto;
//   margin-right: auto;
// }

// @mixin margin-8($d: bottom) {
//   margin-#{$d}: 8px;
//   @include res("sp") {
//     margin-#{$d}: 8px;
//   }
// }

// @mixin margin-16($d: bottom) {
//   margin-#{$d}: 16px;
//   @include res("sp") {
//     margin-#{$d}: 12px;
//   }
// }

// @mixin margin-24($d: bottom) {
//   margin-#{$d}: 24px;
//   @include res("sp") {
//     margin-#{$d}: 18px;
//   }
// }

// @mixin margin-32($d: bottom) {
//   margin-#{$d}: 32px;
//   @include res("sp") {
//     margin-#{$d}: 24px;
//   }
// }

// @mixin margin-40($d: bottom) {
//   margin-#{$d}: 40px;
//   @include res("sp") {
//     margin-#{$d}: 30px;
//   }
// }

// @mixin margin-64($d: bottom) {
//   margin-#{$d}: 64px;
//   @include res("sp") {
//     margin-#{$d}: 48px;
//   }
// }

// @mixin margin-80($d: bottom) {
//   margin-#{$d}: 80px;
//   @include res("sp") {
//     margin-#{$d}: 60px;
//   }
// }

// @mixin margin-120($d: bottom) {
//   margin-#{$d}: 120px;
//   @include res("sp") {
//     margin-#{$d}: 80px;
//   }
// }

// @mixin margin-n($d: bottom, $pc: 120, $sp: 60) {
//   margin-#{$d}: #{$pc}px;
//   @include res("sp") {
//     margin-#{$d}: #{$sp}px;
//   }
// }

// @mixin padding-8($d: bottom) {
//   padding-#{$d}: 8px;
//   @include res("sp") {
//     padding-#{$d}: 8px;
//   }
// }

// @mixin padding-16($d: bottom) {
//   padding-#{$d}: 16px;
//   @include res("sp") {
//     padding-#{$d}: 12px;
//   }
// }

// @mixin padding-24($d: bottom) {
//   padding-#{$d}: 24px;
//   @include res("sp") {
//     padding-#{$d}: 18px;
//   }
// }

// @mixin padding-32($d: bottom) {
//   padding-#{$d}: 32px;
//   @include res("sp") {
//     padding-#{$d}: 24px;
//   }
// }

// @mixin padding-40($d: bottom) {
//   padding-#{$d}: 40px;
//   @include res("sp") {
//     padding-#{$d}: 30px;
//   }
// }

// @mixin padding-64($d: bottom) {
//   padding-#{$d}: 64px;
//   @include res("sp") {
//     padding-#{$d}: 48px;
//   }
// }

// @mixin padding-80($d: bottom) {
//   padding-#{$d}: 80px;
//   @include res("sp") {
//     padding-#{$d}: 60px;
//   }
// }

// @mixin padding-120($d: bottom) {
//   padding-#{$d}: 120px;
//   @include res("sp") {
//     padding-#{$d}: 80px;
//   }
// }

// @mixin padding-n($d: bottom, $pc: 120, $sp: 60) {
//   padding-#{$d}: #{$pc}px;
//   @include res("sp") {
//     padding-#{$d}: #{$sp}px;
//   }
// }

// @mixin border-radius($d: bottom) {
//   margin-#{$d}: 16px;
//   @include res("sp") {
//     margin-#{$d}: 12px;
//   }
// }

// @mixin padding-body($d: bottom) {
//   padding-left: 20px;
//   padding-right: 20px;
//   padding-#{$d}: 16px;
//   @include res("sp") {
//     padding-left: 16px;
//     padding-right: 16px;
//     padding-#{$d}: 16px;
//   }
// }

// mixin

$browsers: -moz-, -webkit-, -ms-, o-, "";

//clearfix
@mixin clr() {
  &:before,
  &:after {
    content: "";
    display: table;
  }

  /* For modern browsers */
  &:after {
    clear: both;
  }

  zoom: 1;
  /* For IE 6/7 (trigger hasLayout) */
}

//box-sizing
@mixin bsz($type: border-box) {
  -webkit-box-sizing: $type;
  -moz-box-sizing: $type;
  box-sizing: $type;
}

//opacity
@mixin op($opacity) {
  opacity: $opacity;
  filter: alpha(opacity=($opacity * 100));
}

//border-radius
@mixin br($radius: 1em) {
  @each $browser in $browsers {
    #{$browser}border-radius: $radius;
  }
}

//box-shadow
@mixin bs($h: 10px, $v: 10px, $b: 0px, $s: 0px, $c: $black) {
  @each $browser in $browsers {
    #{$browser}box-shadow: $h $v $b $s $c;
  }
}

//要素の座標 X
@mixin xPos($x) {
  @each $browser in $browsers {
    #{$browser}transform: translateX($x);
  }
}

//要素の座標 Y
@mixin yPos($y) {
  @each $browser in $browsers {
    #{$browser}transform: translateY($y);
  }
}

//天地の中央に配置
@mixin va {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

//flex
@mixin flex() {
  @each $browser in $browsers {
    display: #{$browser}flex;
    #{$browser}flex-direction: $d;
    #{$browser}flex-wrap: $w;
    #{$browser}justify-content: $jc;
    #{$browser}align-items: $ai;
  }
}

//transition
@mixin trs($time: 0.2s) {
  @each $browser in $browsers {
    #{$browser}transition: $time ease-in-out;
  }
}

//gradient
@mixin grd($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation==vertical {
    // vertical
    background: -moz-linear-gradient(top, $start-color 0%, $end-color 100%);
    background: -webkit-gradient(
      linear,
      left top,
      left bottom,
      color-stop(0%, $start-color),
      color-stop(100%, $end-color)
    );
    background: -webkit-linear-gradient(top, $start-color 0%, $end-color 100%);
    background: -o-linear-gradient(top, $start-color 0%, $end-color 100%);
    background: -ms-linear-gradient(top, $start-color 0%, $end-color 100%);
    background: linear-gradient(to bottom, $start-color 0%, $end-color 100%);
    // filter: progid: DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color', GradientType=0);
  } @else if $orientation==horizontal {
    // horizontal
    background: -moz-linear-gradient(left, $start-color 0%, $end-color 100%);
    background: -webkit-gradient(
      linear,
      left top,
      right top,
      color-stop(0%, $start-color),
      color-stop(100%, $end-color)
    );
    background: -webkit-linear-gradient(left, $start-color 0%, $end-color 100%);
    background: -o-linear-gradient(left, $start-color 0%, $end-color 100%);
    background: -ms-linear-gradient(left, $start-color 0%, $end-color 100%);
    background: linear-gradient(to right, $start-color 0%, $end-color 100%);
    // filter: progid: DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color', GradientType=1);
  } @else {
    // radial
    background: -moz-radial-gradient(
      center,
      ellipse cover,
      $start-color 0%,
      $end-color 100%
    );
    background: -webkit-gradient(
      radial,
      center center,
      0px,
      center center,
      100%,
      color-stop(0%, $start-color),
      color-stop(100%, $end-color)
    );
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color 0%,
      $end-color 100%
    );
    background: -o-radial-gradient(
      center,
      ellipse cover,
      $start-color 0%,
      $end-color 100%
    );
    background: -ms-radial-gradient(
      center,
      ellipse cover,
      $start-color 0%,
      $end-color 100%
    );
    background: radial-gradient(
      ellipse at center,
      $start-color 0%,
      $end-color 100%
    );
    // filter: progid: DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color', GradientType=1);
  }
}
